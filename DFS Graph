from collections import defaultdict

class Graph:
    def __init__(self):
        self.graph = defaultdict(list)
        
    def add_edge(self, u, v):
        self.graph[u].append(v)
        
    def dfs_util(self, v, visited):
        visited.add(v)
        print(v)
        
        for neigh in self.graph[v]:
            if neigh not in visited:
                self.dfs_util(neigh, visited)
                
    def dfs(self, v):
        visited = set()
        self.dfs_util(v, visited)
        
g = Graph()
g.add_edge(0, 1)
g.add_edge(0, 2)
g.add_edge(1, 2)
g.add_edge(2, 0)
g.add_edge(2, 3)
g.add_edge(3, 3)
g.dfs(2)

    
